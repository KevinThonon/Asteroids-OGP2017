package asteroids.model.statements;

import asteroids.model.Expressions.BooleanExpr;
import asteroids.model.Expressions.Expression;
import asteroids.part3.programs.SourceLocation;

public class WhileStatement extends Statement {
	
	private Expression condition;
	private Statement body;

	public WhileStatement(SourceLocation sourcelocation, Expression condition, Statement body) {
		super(sourcelocation);
		setBody(body);
		setCondition(condition);
	}
	
	public Statement getBody() {
		return body;
	}


	public void setBody(Statement body) {
		this.body = body;
	}
	
	public Expression getCondition() {
		return condition;
	}


	public void setCondition(Expression condition) {
		this.condition = condition;
		this.condition.setProgram(getProgram());
	}
	
	@Override
	public void execute() {
		if (!(this.getCondition() instanceof BooleanExpr)) 
			throw new IllegalArgumentException("Condition is not a boolean expression.");
		setWhileStatementActiveOrNot(true);
		while ((boolean)this.getCondition().getVal().getValue() && !this.getProgram().isBreakEnabled()){
			getBody().execute();
		}
		this.getProgram().setBreakEnabled(false);
		setWhileStatementActiveOrNot(false);
	}


	

}
