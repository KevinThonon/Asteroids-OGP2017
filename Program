package asteroids.model;


import java.util.HashMap;
import java.util.List;
import java.util.Map;
import asteroids.model.Expressions.*;
import asteroids.part3.programs.SourceLocation;

public class Program {
	
	private List<Function> functions;
	private Statement main;
	private Map<String,Expression> variables = new HashMap<String,Expression>();
	private double timeLeftToExecute = 0;

	public Program(List<Function> functions, Statement main){
		setListFunctions(functions);
		setMainStatement(main);
		for (Function function: functions) 
			function.setProgram(this);
		main.setProgram(this);
	}
	
	public List<Function> getListFuntions(){
		return this.functions;
	}
	
	public void setListFunctions(List<Function> functions){
		this.functions = functions;
	}
	
	public Statement getMainStatement(){
		return this.main;
	}
	
	public void setMainStatement(Statement main){
		this.main = main;
	}
	
	public double getTimeLeftToExecute(){
		return this.timeLeftToExecute;
	}
	
	public void setTimeLeftToExecute(double timeLeftToExecute){
		this.timeLeftToExecute = timeLeftToExecute;
	}
	
	public Map<String,Expression> getMapsOfVariables(){
		return this.variables;
	}
	
	public void addVariable(String variableName,Expression variable){
		this.variables.put(variableName, variable);
	}
	
	public void execute(double dt){
		double time= this.getTimeLeftToExecute() + dt;
		this.setTimeLeftToExecute(time);
		while(this.getTimeLeftToExecute() >= 0.2){
			this.getMainStatement().execute();
		}
	}
}
